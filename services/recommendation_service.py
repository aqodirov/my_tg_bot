from services.openai_service import ask_gpt
import re

async def get_recommendation(user_text: str) -> str:
    prompt = (
        f"Пользователь ввёл: '{user_text}'. "
        f"Сразу дай рекомендации из фильмов, на свой выбор"
        f"Дай краткое и точное описание: название, год, жанр, автор(ы), ключевые факты. "
        f"Если это фильм — упомяни актёров и режиссёра. "
        f"Если это группа — участников и популярные песни. "
        f"Добавь 2–3 похожих рекомендации. "
        f"Отвечай строго по фактам, без домыслов и ролевых элементов."
    )
    system_role = (
        "Ты — энциклопедический справочник, эксперт по фильмам, книгам, сериалам и музыке. "
        "Отвечай в стиле Википедии. "
        "Запрещено использовать местоимения 'я', 'ты', 'мы', 'мой', 'наш', 'твой'. "
        "Запрещено говорить от первого лица или обращаться к пользователю. "
        "Никаких приветствий, вопросов, диалогов или предложений типа 'не стесняйся спрашивать'. "
        "Никакой ролевой игры. Только фактологический текст. "
        "Формат ответа:\n\n"
        "Название — краткое описание (1–2 предложения)\n"
        "Интересные факты — 1–2 пункта\n"
        "Похожие — 2–3 названия через запятую."
    )

    reply = await ask_gpt(
        prompt=prompt,
        system_role=system_role,
        model="gpt-4o-mini",
        temperature=0.3
    )

    banned_patterns = [
        r"\bпривет\b", r"\bя\b", r"\bты\b", r"\bрад\b",
        r"\bесли хочешь\b", r"\bспрашивай\b", r"\bмогу\b",
        r"\bдавай\b", r"\bхочешь\b", r"\bрад помочь\b",
        r"\bкак ты\b", r"\bвопросы\b", r"\bне стесняйся\b"
    ]
    for pattern in banned_patterns:
        reply = re.sub(pattern, "", reply, flags=re.IGNORECASE)

    reply = re.sub(r"\s{2,}", " ", reply).strip(" .,\n")

    return reply
